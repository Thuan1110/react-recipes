{"version":3,"file":"static/js/695.a005395e.chunk.js","mappings":"wKAEaA,E,OAAeC,GAAAA,IAAH,gb,SCKzB,EAJe,WACb,OAAO,SAACD,EAAD,GACR,C,uICHYE,EAAeD,EAAAA,GAAAA,IAAH,iOAID,SAACE,GAAD,OAAYA,EAAMC,UAAY,QAAU,OAAxC,IACX,SAACD,GAAD,OAAYA,EAAMC,UAAY,QAAU,OAAxC,IASAC,EAAwBJ,EAAAA,GAAAA,IAAH,oMCdrBK,EAAgBL,EAAAA,GAAAA,IAAH,uUAwBbM,EAAcN,EAAAA,GAAAA,IAAH,4KAUXO,EAAoBP,EAAAA,GAAAA,IAAH,iU,kBC4C9B,EAjEsB,SAACE,GACrB,IAAQM,EAAON,EAAMO,OAAbD,GACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,QAAQH,WAAzB,IAC1BI,GAAYH,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,QAAQC,SAAzB,IACxBC,GAAQJ,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,QAAQE,KAAzB,IACpBC,GAAQL,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,QAAQG,KAAzB,IACpBC,GAAQN,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,QAAQI,KAAzB,IACpBhB,GAAYU,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,QAAQZ,SAAzB,KAE9BiB,EAAAA,EAAAA,YAAU,WACRV,GAASW,EAAAA,EAAAA,IAAiBb,IAC1BE,GAASY,EAAAA,EAAAA,IAAkBd,GAC5B,GAAE,CAACE,EAAUF,IAEd,IAAMe,EAAqB,WACzBb,EAASc,EAAAA,GAAAA,SACV,EAED,OACE,gCACGR,IAAa,SAACS,EAAA,EAAD,KACZT,IACA,UAACX,EAAD,YACE,UAACC,EAAD,YACE,uBAAIY,KACJ,gBAAKQ,IAAKT,EAAOU,IAAI,SAGvB,UAACpB,EAAD,YACE,UAACH,EAAD,YACE,SAACH,EAAD,CAAcE,UAAWA,EAAzB,UACE,mBAAQyB,QAASzB,EAAYoB,EAAqB,KAAlD,4BAIF,SAACtB,EAAD,CAAcE,WAAYA,EAA1B,UACE,mBAAQyB,QAAUzB,EAAiC,KAArBoB,EAA9B,+BAKFpB,GACAS,EAAYiB,KAAI,SAACC,GAAD,OACd,wBAAyBA,EAAWC,UAA3BD,EAAWtB,GADN,IAIjBL,GACCgB,EAAMa,OAAS,GACfb,EAAMU,KAAI,SAACI,GAAD,OACR,2BACE,oCAAYA,EAAKC,OAAjB,QADF,IACqCD,EAAKA,OADjCA,EAAKC,OADN,IAMX/B,GAA8B,IAAjBgB,EAAMa,SAClB,2DAOb,ECpED,EANe,WACb,IAAMvB,GAAS0B,EAAAA,EAAAA,MAEf,OAAO,SAAC,EAAD,CAAe1B,OAAQA,GAC/B,C","sources":["components/Styles/Loader.styled.js","components/UI/Loader.js","components/Styles/Button.styled.js","components/Styles/Details.styled.js","components/Recipes/RecipesDetail.js","pages/Detail.js"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const StyledLoader = styled.div`\r\n  border: 16px solid #f3f3f3;\r\n  border-radius: 50%;\r\n  border-top: 16px solid #3498db;\r\n  width: 120px;\r\n  height: 120px;\r\n  animation: spin 2s linear infinite;\r\n  margin: 3rem auto;\r\n  text-align: center;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  @keyframes spin {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { StyledLoader } from \"../Styles/Loader.styled\";\r\n\r\nconst Loader = () => {\r\n  return <StyledLoader></StyledLoader>;\r\n};\r\n\r\nexport default Loader;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledButton = styled.div`\r\n  button {\r\n    width: 100px;\r\n    height: 40px;\r\n    background-color: ${(props) => (props.isClicked ? \"white\" : \"black\")};\r\n    color: ${(props) => (props.isClicked ? \"black\" : \"white\")};\r\n    border: 1px solid black;\r\n    font-weight: bold;\r\n  }\r\n  &:hover button {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const StyledButtonContainer = styled.div`\r\n  width: 250px;\r\n  text-align: center;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin: 1rem 0;\r\n  @media (max-width: 768px) {\r\n    margin: 1rem auto;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledDetails = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  margin: 5rem 0;\r\n\r\n  img {\r\n    width: 350px;\r\n    height: 200px;\r\n    object-fit: cover;\r\n  }\r\n\r\n  p {\r\n    font-size: 1rem;\r\n    font-weight: 500;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    flex-direction: column;\r\n    img {\r\n      text-align: center;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const StyledImage = styled.div`\r\n  width: 45rem;\r\n  padding: 0 10rem;\r\n  @media (max-width: 768px) {\r\n    max-width: fit-content;\r\n    padding: 1rem;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport const StyledIngredients = styled.div`\r\n  width: 40rem;\r\n  height: fit-content;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  li {\r\n    padding-top: 1rem;\r\n  }\r\n  span {\r\n    font-weight: 500;\r\n  }\r\n  @media (max-width: 768px) {\r\n    max-width: fit-content;\r\n    padding: 1rem;\r\n    text-align: left;\r\n  }\r\n`;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  fetchInstructions,\r\n  fetchRecipesInfo,\r\n  recipeAction,\r\n} from \"../../redux/recipes-slice\";\r\nimport { StyledButton, StyledButtonContainer } from \"../Styles/Button.styled\";\r\nimport {\r\n  StyledDetails,\r\n  StyledImage,\r\n  StyledIngredients,\r\n} from \"../Styles/Details.styled\";\r\nimport Loader from \"../UI/Loader\";\r\n\r\nconst RecipesDetail = (props) => {\r\n  const { id } = props.params;\r\n  const dispatch = useDispatch();\r\n  const ingredients = useSelector((state) => state.recipes.ingredients);\r\n  const isLoading = useSelector((state) => state.recipes.isLoading);\r\n  const image = useSelector((state) => state.recipes.image);\r\n  const title = useSelector((state) => state.recipes.title);\r\n  const steps = useSelector((state) => state.recipes.steps);\r\n  const isClicked = useSelector((state) => state.recipes.isClicked);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchRecipesInfo(id));\r\n    dispatch(fetchInstructions(id));\r\n  }, [dispatch, id]);\r\n\r\n  const buttonClickHandler = () => {\r\n    dispatch(recipeAction.toggle());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isLoading && <Loader />}\r\n      {!isLoading && (\r\n        <StyledDetails>\r\n          <StyledImage>\r\n            <p>{title}</p>\r\n            <img src={image} alt=\"\" />\r\n          </StyledImage>\r\n\r\n          <StyledIngredients>\r\n            <StyledButtonContainer>\r\n              <StyledButton isClicked={isClicked}>\r\n                <button onClick={isClicked ? buttonClickHandler : null}>\r\n                  Ingredients\r\n                </button>\r\n              </StyledButton>\r\n              <StyledButton isClicked={!isClicked}>\r\n                <button onClick={!isClicked ? buttonClickHandler : null}>\r\n                  Instruction\r\n                </button>\r\n              </StyledButton>\r\n            </StyledButtonContainer>\r\n            {!isClicked &&\r\n              ingredients.map((ingredient) => (\r\n                <li key={ingredient.id}>{ingredient.original}</li>\r\n              ))}\r\n\r\n            {isClicked &&\r\n              steps.length > 0 &&\r\n              steps.map((step) => (\r\n                <li key={step.number}>\r\n                  <span>Step {step.number} :</span> {step.step}\r\n                </li>\r\n              ))}\r\n\r\n            {isClicked && steps.length === 0 && (\r\n              <div>No instructions found</div>\r\n            )}\r\n          </StyledIngredients>\r\n        </StyledDetails>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RecipesDetail;\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport RecipesDetail from \"../components/Recipes/RecipesDetail\";\r\n\r\nconst Detail = () => {\r\n  const params = useParams();\r\n\r\n  return <RecipesDetail params={params} />;\r\n};\r\n\r\nexport default Detail;\r\n"],"names":["StyledLoader","styled","StyledButton","props","isClicked","StyledButtonContainer","StyledDetails","StyledImage","StyledIngredients","id","params","dispatch","useDispatch","ingredients","useSelector","state","recipes","isLoading","image","title","steps","useEffect","fetchRecipesInfo","fetchInstructions","buttonClickHandler","recipeAction","Loader","src","alt","onClick","map","ingredient","original","length","step","number","useParams"],"sourceRoot":""}